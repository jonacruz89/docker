version: "3.2"

services:
 php:
  build:
   context: './bin/php'
  container_name: php-fpm-dev
  tty: true
  restart: always
  volumes:
   - ${DOCUMENT_ROOT}:/var/www/html
  working_dir: /var/www/html
  networks:
   - backend

# nginx:
#  build:
#   context: './bin/nginx'
#  container_name: nginx-dev
#  networks:
#   - backend
#   - frontend
#  restart: always
#  ports:
#   - '80:80'
#   - '443:443'
#  depends_on:
#   - php
#   - mysql
#   - postgres
#  working_dir: /var/www/html
#  tty: true
#  volumes:
#   - ${DOCUMENT_ROOT}:/var/www/html

 apache:
  build:
   context: './bin/apache'
  container_name: apache-dev
  networks:
   - backend
   - frontend
  restart: always
  ports:
   - '80:80'
   - '443:443'
  depends_on:
   - php
   - mysql
#   - postgres
  working_dir: /var/www/html
  tty: true
  volumes:
   - ${DOCUMENT_ROOT}:/var/www/html

 mysql:
  build:
   context: './bin/mysql'
  container_name: mysql-dev
  networks: 
   - backend
  restart: always
  ports:
   - '3306:3306'
  tty: true
  volumes: 
   - ${MYSQL_DATA}:/var/lib/mysql
   - ${MYSQL_LOGS}:/var/log/mysql
  environment:
   MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
   MYSQL_DATABASE: ${MYSQL_DATABASE}
   MYSQL_USER: ${MYSQL_USER}
   MYSQL_PASSWORD: ${MYSQL_PASSWORD}

# composer:
#  build:
#   context: './bin/composer'
#  container_name: composer-dev
#  working_dir: /var/www/html
#  volumes:         
#   - ${DOCUMENT_ROOT}:/var/www/html
#  command: composer global require laravel/installer
#  command: composer create-project --prefer-dist laravel/laravel laravel-project

 phpmyadmin:
  image: phpmyadmin/phpmyadmin
  container_name: phpmyadmin-dev
  links:
   - mysql
  environment:
   PMA_HOST: mysql
   PMA_PORT: 3306
  ports:
   - '8080:80'
  volumes: 
   - /sessions
  networks:
   - backend
   - frontend

# postgres:
#  build:
#   context: './bin/postgres'
#  container_name: postgres-dev
#  restart: always
#  environment:
#   POSTGRES_USER: ${POSTGRES_USER:-postgres}
#   POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
#   POSTGRES_DB: ${POSTGRES_DB:-postgres}
#  ports:
#   - "5432:5432"
#  volumes:
#   - ${POSTGRES_DATA}:/var/lib/postgresql
#   - ${POSTGRES_LOGS}:/var/log/postgresql
#  networks:
#   - backend

# pgadmin:
#   build:
#    context: './bin/pgadmin'
#   container_name: pgadmin-dev
#   environment:
#    PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.com}
#    PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-pgadminpass}
#   ports:
#    - "6543:80"
#   links:
#    - postgres
#   networks:
#    - backend
#    - frontend
    
# wordpress:
#  build:
#   context: './bin/wordpress'
#  container_name: wordpress-dev
#  restart: always
#  links:
#   - mysql
#  ports:
#   - "8081:80"
#  environment:
#   WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
#   WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
#   WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
#   WORDPRESS_DB_NAME: ${WORDPRESS_DB_NAME}
#  volumes:
#   - ${DOCUMENT_ROOT}${WORDPRESS_FOLDER}:/var/www/html
#  networks:
#   - backend
#   - frontend

 joomla:
  image: joomla
  container_name: joomla-dev
  restart: always
  links:
   - mysql
  ports:
   - "8081:80"
  environment:
   JOOMLA_DB_HOST: ${JOOMLA_DB_HOST}
   JOOMLA_DB_USER: ${JOOMLA_DB_USER}
   JOOMLA_DB_PASSWORD: ${JOOMLA_DB_PASSWORD}
   JOOMLA_DB_NAME: ${JOOMLA_DB_NAME}
  volumes:
   - ${DOCUMENT_ROOT}${JOOMLA_FOLDER}:/var/www/html
  networks:
   - backend
   - frontend
                
networks:
  backend:
  frontend:

